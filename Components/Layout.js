import AppBar from "@mui/material/AppBar";
import Container from "@mui/material/Container";
import Typography from "@mui/material/Typography";
import IconButton from "@mui/material/IconButton";
import Box from "@mui/material/Box";
import Divider from "@mui/material/Divider";
import Stack from "@mui/material/Stack";
import Badge from "@mui/material/Badge";
import Input from "@mui/material/Input";
import Popover from "@mui/material/Popover";
import React from "react";
import { createTheme, ThemeProvider } from "@mui/material/styles";

import Search from "@mui/icons-material/Search";
import ShoppingCart from "@mui/icons-material/ShoppingCart";
import Menu from "@mui/icons-material/Menu";
import Image from "next/image";
import Head from "next/head";
import Link from "next/link";
import { useRef, useContext, useState } from "react";
import { ShopContext } from "./Utility";

import dynamic from "next/dynamic";
import { createBreakpoints } from "@mui/system";
import Router from "next/router";
const SidebarMenu = dynamic(() => import("./SidebarMenu"));
const Sidebar = dynamic(() => import("./Sidebar"));
const Footer = dynamic(() => import("./Footer"));

function Layout(props) {
  const [menPopOver, setmenPopOver] = useState(false);
  const menPopoverRef = useRef(null);

  const [womenPopOver, setwomenPopOver] = useState(false);
  const womenPopoverRef = useRef(null);

  const [accPopOver, setaccPopOver] = useState(false);
  const accPopoverRef = useRef(null);

  const { openSidebar, checkout, openMenuSidebar, searchBar, openSearch } =
    useContext(ShopContext);

  const breakpoints = createBreakpoints({});

  const theme = createTheme({
    palette: {
      mode: "light",
    },
    typography: {
      allVariants: {
        fontFamily: '"Metropolis", sans-serif',
      },
      h3: {
        fontSize: "2.4rem",

        "@media (min-width:600px)": {
          fontSize: "3rem",
        },
      },
      h4: {
        fontSize: "1.6rem",

        "@media (min-width:600px)": {
          fontSize: "2.125rem",
        },
      },
      h6: {
        fontSize: "1rem",

        "@media (min-width:600px)": {
          fontSize: "1.25rem",
        },
      },
      body1: {
        fontSize: ".85rem",

        "@media (min-width:600px)": {
          fontSize: "1rem",
        },
      },
    },
  });

  return (
    <ThemeProvider theme={theme}>
      <Head>
        <title>{props.title}</title>
        {props.description && (
          <meta name="description" content="Generated by create next app" />
        )}
        <link rel="icon" href="/images/favicon.ico" />
      </Head>
      <AppBar
        position="sticky"
        sx={{
          backgroundColor: "#fff",
          color: "#000",
          boxShadow: "none",
        }}
      >
        <Container fixed>
          <Box
            sx={{
              display: "flex",
              alignItems: "center",
              py: { xs: 2, md: 0 },
            }}
          >
            <Box
              sx={{
                display: { xs: "block", md: "none" },
              }}
            >
              <IconButton onClick={openMenuSidebar}>
                <Menu
                  sx={{
                    color: "#000",
                  }}
                />
              </IconButton>
            </Box>
            <Stack
              spacing={3}
              direction="row"
              sx={{
                alignItems: "center",
                display: { xs: "none", md: "flex" },
              }}
            >
              <Box>
                <Link href="/men" passHref>
                  <a>
                    <Typography
                      ref={menPopoverRef}
                      aria-owns="men-over-popover"
                      aria-haspopup="true"
                      onMouseEnter={() => {
                        setmenPopOver(true);
                      }}
                      onMouseLeave={() => {
                        setmenPopOver(false);
                      }}
                    >
                      Men&apos;s
                    </Typography>
                  </a>
                </Link>
                <Popover
                  disableRestoreFocus
                  id="men-over-popover"
                  open={menPopOver}
                  sx={{
                    pointerEvents: "none",
                  }}
                  anchorEl={menPopoverRef.current}
                  anchorOrigin={{
                    vertical: "bottom",
                    horizontal: "left",
                  }}
                  transformOrigin={{
                    vertical: "top",
                    horizontal: "left",
                  }}
                  PaperProps={{
                    onMouseEnter: () => {
                      setmenPopOver(true);
                    },
                    onMouseLeave: () => {
                      setmenPopOver(false);
                    },
                  }}
                >
                  <Box px={3} py={2}>
                    <Link href="/" passHref>
                      <a>
                        <Typography mb={1} variant="body1">
                          Short Sleeve
                        </Typography>
                      </a>
                    </Link>
                    <Link href="/" passHref>
                      <a>
                        <Typography variant="body1">Long Sleeve</Typography>
                      </a>
                    </Link>
                  </Box>
                </Popover>
              </Box>
              <Box>
                <Link href="/women" passHref>
                  <a>
                    <Typography
                      ref={womenPopoverRef}
                      aria-owns="women-over-popover"
                      aria-haspopup="true"
                      onMouseEnter={() => {
                        setwomenPopOver(true);
                      }}
                      onMouseLeave={() => {
                        setwomenPopOver(false);
                      }}
                    >
                      Women&apos;s
                    </Typography>
                  </a>
                </Link>
                <Popover
                  disableRestoreFocus
                  id="women-over-popover"
                  open={womenPopOver}
                  sx={{
                    pointerEvents: "none",
                  }}
                  anchorEl={womenPopoverRef.current}
                  anchorOrigin={{
                    vertical: "bottom",
                    horizontal: "left",
                  }}
                  transformOrigin={{
                    vertical: "top",
                    horizontal: "left",
                  }}
                  PaperProps={{
                    onMouseEnter: () => {
                      setwomenPopOver(true);
                    },
                    onMouseLeave: () => {
                      setwomenPopOver(false);
                    },
                  }}
                >
                  <Box px={3} py={2}>
                    <Link href="/" passHref>
                      <a>
                        <Typography mb={1} variant="body1">
                          Short Sleeve
                        </Typography>
                      </a>
                    </Link>
                    <Link href="/" passHref>
                      <a>
                        <Typography variant="body1">Long Sleeve</Typography>
                      </a>
                    </Link>
                  </Box>
                </Popover>
              </Box>
              <Box>
                <Link href="/accessories" passHref>
                  <a>
                    <Typography
                      ref={accPopoverRef}
                      aria-owns="accessories-over-popover"
                      aria-haspopup="true"
                      onMouseEnter={() => {
                        setaccPopOver(true);
                      }}
                      onMouseLeave={() => {
                        setaccPopOver(false);
                      }}
                    >
                      Accessories
                    </Typography>
                  </a>
                </Link>
                <Popover
                  disableRestoreFocus
                  id="accessories-over-popover"
                  open={accPopOver}
                  sx={{
                    pointerEvents: "none",
                  }}
                  anchorEl={accPopoverRef.current}
                  anchorOrigin={{
                    vertical: "bottom",
                    horizontal: "left",
                  }}
                  transformOrigin={{
                    vertical: "top",
                    horizontal: "left",
                  }}
                  PaperProps={{
                    onMouseEnter: () => {
                      setaccPopOver(true);
                    },
                    onMouseLeave: () => {
                      setaccPopOver(false);
                    },
                  }}
                >
                  <Box px={3} py={2}>
                    <Link href="/" passHref>
                      <a>
                        <Typography variant="body1">Hats</Typography>
                      </a>
                    </Link>
                  </Box>
                </Popover>
              </Box>
            </Stack>
            <Box
              sx={{
                flexGrow: 1,
              }}
            ></Box>
            <Box
              sx={{
                width: "150px",
                height: "80px",
                position: "relative",
                display: { xs: "none", md: "block" },
              }}
            >
              <Link href="/" passHref>
                <a>
                  <Image
                    alt="Weedoo Logo"
                    objectFit="contain"
                    layout="fill"
                    src="/images/weedoologo-head.png"
                  ></Image>
                </a>
              </Link>
            </Box>
            <Box
              sx={{
                flexGrow: { xs: 0.75, md: 1.35 },
              }}
            ></Box>
            <Box display="flex">
              <Box position="relative">
                <Input
                  disableUnderline
                  sx={{
                    position: "absolute",
                    border: "1px solid #000",
                    borderRadius: "6px",
                    height: 40,
                    width: searchBar ? { xs: "100%", sm: 150, lg: 200 } : 0,
                    opacity: searchBar ? 1 : 0,
                    transition: "0.25s ease-out",
                    right: "60px",
                    top: "50%",
                    transform: "translateY(-50%)",
                    px: 2,
                    display: { xs: "none", sm: "block" },
                  }}
                  inputProps={{
                    sx: {
                      height: "29px",
                    },
                  }}
                  onKeyDown={(event) => {
                    if (event.key === "Enter") {
                      Router.push({
                        pathname: "/search",
                        query: { keyword: event.target.value },
                      });
                    }
                  }}
                />
                <IconButton
                  onClick={openSearch}
                  sx={{
                    color: "#000",
                    mr: 2,
                  }}
                >
                  <Search />
                </IconButton>
              </Box>
              <IconButton
                sx={{
                  color: "#000",
                }}
                onClick={() => {
                  openSidebar();
                }}
              >
                <Badge
                  badgeContent={checkout.lineItems?.length}
                  color="primary"
                >
                  <ShoppingCart />
                </Badge>
              </IconButton>
            </Box>
          </Box>
        </Container>
        <Divider />
      </AppBar>
      <Sidebar />
      <SidebarMenu />
      <Container
        fixed
        sx={{
          my: 5,
        }}
      >
        {props.children}
      </Container>
      <Footer />
    </ThemeProvider>
  );
}

export default Layout;
